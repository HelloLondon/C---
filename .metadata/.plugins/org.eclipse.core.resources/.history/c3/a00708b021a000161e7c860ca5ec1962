#include "tree.h"

int BinaryTree::height() {

	return 0;
}

void BinaryTree::add(int val) {
	if(val >= root) {
		if(rightTree == NULL) {
			rightTree = new BinaryTree(val);
		} else {
			rightTree->add(val);
		}
	} else if (val < root) {
		if(leftTree == NULL) {
			leftTree = new BinaryTree(val);
		} else {
			leftTree->add(val);
		}
	}
}

int BinaryTree::prePrint(ostrstream &os) {
	os <<  root;
	int rightHeight = 0;
	int leftHight = 0;
	if(leftTree != NULL) {
		os << " ";
		leftHight = leftTree->print(os);
	}
//	os << ",";
	if(rightTree != NULL) {
		os << " ";
		rightHeight = rightTree->print(os);
	}
//	os << ")";
	return 1 + (rightHeight > leftHight ?  rightHeight : leftHight);
}
