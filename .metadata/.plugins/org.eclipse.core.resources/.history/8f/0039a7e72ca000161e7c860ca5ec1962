#include "tree.h"

int BinarySearchTree::height() {

	return 0;
}

void BinarySearchTree::add(int val) {
	if(val >= root) {
		if(rightTree == NULL) {
			rightTree = new BinarySearchTree(val);
		} else {
			rightTree->add(val);
		}
	} else if (val < root) {
		if(leftTree == NULL) {
			leftTree = new BinarySearchTree(val);
		} else {
			leftTree->add(val);
		}
	}
}

//递归中序遍历
void BinarySearchTree::inPrderPrint() {
	if(leftTree != NULL) {
		leftTree->inPrderPrint();
	}
	if(rightTree != NULL) {
		rightTree->inPrderPrint();
	}
	if(leftTree == NULL && rightTree == NULL) {
		cout << root << " ";
	}
}

